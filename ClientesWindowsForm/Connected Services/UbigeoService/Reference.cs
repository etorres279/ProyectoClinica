//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UbigeoService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UbigeoDC", Namespace="http://schemas.datacontract.org/2004/07/WCF_Clinica")]
    public partial class UbigeoDC : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string DepartamentoField;
        
        private string DistritoField;
        
        private string ProvinciaField;
        
        private string idDepaField;
        
        private string idDistField;
        
        private string idProvField;
        
        private string id_ubigeoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Departamento
        {
            get
            {
                return this.DepartamentoField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DepartamentoField, value) != true))
                {
                    this.DepartamentoField = value;
                    this.RaisePropertyChanged("Departamento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Distrito
        {
            get
            {
                return this.DistritoField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DistritoField, value) != true))
                {
                    this.DistritoField = value;
                    this.RaisePropertyChanged("Distrito");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Provincia
        {
            get
            {
                return this.ProvinciaField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ProvinciaField, value) != true))
                {
                    this.ProvinciaField = value;
                    this.RaisePropertyChanged("Provincia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idDepa
        {
            get
            {
                return this.idDepaField;
            }
            set
            {
                if ((object.ReferenceEquals(this.idDepaField, value) != true))
                {
                    this.idDepaField = value;
                    this.RaisePropertyChanged("idDepa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idDist
        {
            get
            {
                return this.idDistField;
            }
            set
            {
                if ((object.ReferenceEquals(this.idDistField, value) != true))
                {
                    this.idDistField = value;
                    this.RaisePropertyChanged("idDist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idProv
        {
            get
            {
                return this.idProvField;
            }
            set
            {
                if ((object.ReferenceEquals(this.idProvField, value) != true))
                {
                    this.idProvField = value;
                    this.RaisePropertyChanged("idProv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id_ubigeo
        {
            get
            {
                return this.id_ubigeoField;
            }
            set
            {
                if ((object.ReferenceEquals(this.id_ubigeoField, value) != true))
                {
                    this.id_ubigeoField = value;
                    this.RaisePropertyChanged("id_ubigeo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UbigeoService.IServicioUbigeo")]
    public interface IServicioUbigeo
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUbigeo/ListarDepartamentos", ReplyAction="http://tempuri.org/IServicioUbigeo/ListarDepartamentosResponse")]
        System.Collections.Generic.List<UbigeoService.UbigeoDC> ListarDepartamentos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUbigeo/ListarDepartamentos", ReplyAction="http://tempuri.org/IServicioUbigeo/ListarDepartamentosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<UbigeoService.UbigeoDC>> ListarDepartamentosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUbigeo/ListarProvinciasPorDepartamento", ReplyAction="http://tempuri.org/IServicioUbigeo/ListarProvinciasPorDepartamentoResponse")]
        System.Collections.Generic.List<UbigeoService.UbigeoDC> ListarProvinciasPorDepartamento(string idDepartamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUbigeo/ListarProvinciasPorDepartamento", ReplyAction="http://tempuri.org/IServicioUbigeo/ListarProvinciasPorDepartamentoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<UbigeoService.UbigeoDC>> ListarProvinciasPorDepartamentoAsync(string idDepartamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUbigeo/ListarDistritosPorDepartamentoYProvincia", ReplyAction="http://tempuri.org/IServicioUbigeo/ListarDistritosPorDepartamentoYProvinciaRespon" +
            "se")]
        System.Collections.Generic.List<UbigeoService.UbigeoDC> ListarDistritosPorDepartamentoYProvincia(string idDepartamento, string idProvincia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUbigeo/ListarDistritosPorDepartamentoYProvincia", ReplyAction="http://tempuri.org/IServicioUbigeo/ListarDistritosPorDepartamentoYProvinciaRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<UbigeoService.UbigeoDC>> ListarDistritosPorDepartamentoYProvinciaAsync(string idDepartamento, string idProvincia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUbigeo/ConsultarUbigeo", ReplyAction="http://tempuri.org/IServicioUbigeo/ConsultarUbigeoResponse")]
        UbigeoService.UbigeoDC ConsultarUbigeo(string idUbigeo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUbigeo/ConsultarUbigeo", ReplyAction="http://tempuri.org/IServicioUbigeo/ConsultarUbigeoResponse")]
        System.Threading.Tasks.Task<UbigeoService.UbigeoDC> ConsultarUbigeoAsync(string idUbigeo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IServicioUbigeoChannel : UbigeoService.IServicioUbigeo, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class ServicioUbigeoClient : System.ServiceModel.ClientBase<UbigeoService.IServicioUbigeo>, UbigeoService.IServicioUbigeo
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServicioUbigeoClient() : 
                base(ServicioUbigeoClient.GetDefaultBinding(), ServicioUbigeoClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServicioUbigeo.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioUbigeoClient(EndpointConfiguration endpointConfiguration) : 
                base(ServicioUbigeoClient.GetBindingForEndpoint(endpointConfiguration), ServicioUbigeoClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioUbigeoClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServicioUbigeoClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioUbigeoClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServicioUbigeoClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioUbigeoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Collections.Generic.List<UbigeoService.UbigeoDC> ListarDepartamentos()
        {
            return base.Channel.ListarDepartamentos();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<UbigeoService.UbigeoDC>> ListarDepartamentosAsync()
        {
            return base.Channel.ListarDepartamentosAsync();
        }
        
        public System.Collections.Generic.List<UbigeoService.UbigeoDC> ListarProvinciasPorDepartamento(string idDepartamento)
        {
            return base.Channel.ListarProvinciasPorDepartamento(idDepartamento);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<UbigeoService.UbigeoDC>> ListarProvinciasPorDepartamentoAsync(string idDepartamento)
        {
            return base.Channel.ListarProvinciasPorDepartamentoAsync(idDepartamento);
        }
        
        public System.Collections.Generic.List<UbigeoService.UbigeoDC> ListarDistritosPorDepartamentoYProvincia(string idDepartamento, string idProvincia)
        {
            return base.Channel.ListarDistritosPorDepartamentoYProvincia(idDepartamento, idProvincia);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<UbigeoService.UbigeoDC>> ListarDistritosPorDepartamentoYProvinciaAsync(string idDepartamento, string idProvincia)
        {
            return base.Channel.ListarDistritosPorDepartamentoYProvinciaAsync(idDepartamento, idProvincia);
        }
        
        public UbigeoService.UbigeoDC ConsultarUbigeo(string idUbigeo)
        {
            return base.Channel.ConsultarUbigeo(idUbigeo);
        }
        
        public System.Threading.Tasks.Task<UbigeoService.UbigeoDC> ConsultarUbigeoAsync(string idUbigeo)
        {
            return base.Channel.ConsultarUbigeoAsync(idUbigeo);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServicioUbigeo))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServicioUbigeo))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/WCF_Clinica/ServicioUbigeo/");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServicioUbigeoClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServicioUbigeo);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServicioUbigeoClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServicioUbigeo);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServicioUbigeo,
        }
    }
}
